{"version":3,"sources":["App.tsx","components/Wrapper.tsx","components/Modal.tsx","assets/walletconnect-banner.png","assets/algo.svg","components/Icon.tsx","components/ASAIcon.tsx","components/AssetRow.tsx","components/AccountAssets.tsx","components/Blockie.tsx","components/Header.tsx","index.tsx","components/Column.tsx","components/Loader.tsx","components/Banner.tsx","helpers/utilities.ts","styles.ts","components/Button.tsx","scenarios.ts","helpers/api.ts"],"names":["SLayout","styled_components__WEBPACK_IMPORTED_MODULE_2__","div","templateObject_1","Object","tslib__WEBPACK_IMPORTED_MODULE_0__","SContent","_components_Wrapper__WEBPACK_IMPORTED_MODULE_9__","templateObject_2","SLanding","_components_Column__WEBPACK_IMPORTED_MODULE_8__","templateObject_3","SButtonContainer","templateObject_4","SConnectButton","_components_Button__WEBPACK_IMPORTED_MODULE_7__","templateObject_5","_styles__WEBPACK_IMPORTED_MODULE_13__","size","medium","SContainer","templateObject_6","SModalContainer","templateObject_7","SModalTitle","templateObject_8","SModalButton","button","templateObject_9","SModalParagraph","p","templateObject_10","SBalances","templateObject_11","STable","templateObject_12","SRow","templateObject_13","SKey","templateObject_14","SValue","templateObject_15","STestButtonContainer","templateObject_16","STestButton","templateObject_17","INITIAL_STATE","connector","fetching","connected","showModal","pendingRequest","signedTxns","pendingSubmission","pendingSubmissionError","uri","accounts","address","result","assets","App","_super","_this","apply","this","arguments","state","walletConnectInit","_walletconnect_client__WEBPACK_IMPORTED_MODULE_3___default","a","bridge","qrcodeModal","_walletconnect_qrcode_modal__WEBPACK_IMPORTED_MODULE_4___default","setState","_a","sent","createSession","subscribeToEvents","on","error","payload","console","log","params","onSessionUpdate","onConnect","onDisconnect","killSession","resetApp","getAccountAssets","_helpers_api__WEBPACK_IMPORTED_MODULE_14__","error_1","toggleModal","signTxnScenario","scenario","txnsToSign_1","_b","walletTxns","map","txn","shouldSign","authAddr","Buffer","from","algosdk__WEBPACK_IMPORTED_MODULE_6___default","encodeUnsignedTransaction","toString","signers","undefined","requestParams","request","_json_rpc_tools_utils__WEBPACK_IMPORTED_MODULE_5__","sendCustomRequest","signedPartialTxns","r","i","Error","rawSignedTxn","Uint8Array","stxn","_scenarios__WEBPACK_IMPORTED_MODULE_17__","signedTxnInfo","signedTxn","decodeSignedTransaction","txID","unsignedTxID","signingAddress","sgnr","encodeAddress","signature","sig","formattedResult","method","error_2","render","react__WEBPACK_IMPORTED_MODULE_1__","maxWidth","spanHeight","_components_Header__WEBPACK_IMPORTED_MODULE_11__","length","_components_Banner__WEBPACK_IMPORTED_MODULE_15__","center","_components_Loader__WEBPACK_IMPORTED_MODULE_12__","_components_AccountAssets__WEBPACK_IMPORTED_MODULE_16__","name","left","key","onClick","_components_Modal__WEBPACK_IMPORTED_MODULE_10__","show","keys","JSON","stringify","submitSignedTransaction","disabled","prototype","confirmedRound","err_1","__webpack_exports__","fadeIn","styled_components__WEBPACK_IMPORTED_MODULE_3__","SWrapper","Wrapper","props","children","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_2__","isRequired","defaultProps","SLightbox","offset","opacity","alpha","SHitbox","SCloseButton","_styles__WEBPACK_IMPORTED_MODULE_4__","short","color","SCard","white","SModalContent","Modal","d","window","document","body","getElementsByTagName","style","position","componentDidUpdate","lightbox","lightboxRect","getBoundingClientRect","top","ref","c","module","exports","__webpack_require__","SIcon","styled_components_browser_esm","img","tslib_es6","Icon","src","fallback","react","onError","event","target","prop_types","components_Icon","ASAIcon","assetID","components_ASAIcon","SAssetRow","AssetRow_templateObject_1","SAssetRowLeft","SAssetName","SAssetRowRight","SAssetBalance","components_AssetRow","asset","nativeCurrencyIcon","id","algo_default","utilities","amount","decimals","unitName","nativeCurrency","find","BigInt","creator","frozen","tokens","filter","Column","token","SBlockieWrapper","Blockie","seed","toLowerCase","imgUrl","blockies","create","toDataURL","alt","components_Blockie","SHeader","Header_templateObject_1","SActiveAccount","SActiveChain","SBlockie","SAddress","styles","base","SDisconnect","Header","Banner","GlobalStyle","_styles__WEBPACK_IMPORTED_MODULE_5__","react_dom__WEBPACK_IMPORTED_MODULE_2__","_App__WEBPACK_IMPORTED_MODULE_4__","getElementById","SColumn","load","SLoader","svg","Loader","rgb","viewBox","stroke","strokeWidth","fill","fillRule","x","y","width","height","rx","SBannerWrapper","SBanner","_assets_walletconnect_banner_png__WEBPACK_IMPORTED_MODULE_3___default","ellipseAddress","slice","formatBigNumWithDecimals","num","singleUnit","repeat","fractionalUnits","padStart","colors","fonts","transitions","shadows","globalStyle","black","dark","grey","darkGrey","lightGrey","blue","lightBlue","yellow","orange","green","pink","red","purple","tiny","small","large","h1","h2","h3","h4","h5","h6","weight","normal","semibold","bold","extrabold","family","OpenSans","long","soft","big","hover","SHoverLayer","SButton","outline","icon","Button","type","_Loader__WEBPACK_IMPORTED_MODULE_3__","testAccounts","algosdk__WEBPACK_IMPORTED_MODULE_1___default","mnemonicToSecretKey","signTxnWithTestAccount","sender","publicKey","_i","testAccounts_1","testAccount","addr","signTxn","sk","scenarios","Promise","_helpers_api__WEBPACK_IMPORTED_MODULE_2__","suggestedParams","makePaymentTxnWithSuggestedParamsFromObject","to","note","closeRemainderTo","rekeyTo","makeAssetTransferTxnWithSuggestedParamsFromObject","assetIndex","makeApplicationOptInTxnFromObject","appIndex","appArgs","makeApplicationNoOpTxnFromObject","makeApplicationCloseOutTxnFromObject","txn1","txn2","txnsToSign","computeGroupID","toSign","txn3","txn4","optIn","assetXfer","assetClose","payment","accountClose","accountRekey","accountRekeyAndClose","closeOut","push","client","Algodv2","apiGetAccountAssets","accountInformation","setIntDecoding","IntDecoding","BIGINT","do","accountInfo","algoBalance","assetsFromRes","Number","sort","b","all","getAssetByID","url","unshift","apiGetTxnParams","getTransactionParams","apiSubmitTransactions","stxns","sendRawTransaction","waitForTransaction","txId","status","lastStatus","lastRound","pendingTransactionInformation","statusAfterBlock"],"mappings":"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","file":"static/js/main.b2673328.chunk.js","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"@walletconnect/qrcode-modal\";\nimport { IInternalEvent } from \"@walletconnect/types\";\nimport { formatJsonRpcRequest } from \"@json-rpc-tools/utils\";\nimport algosdk from \"algosdk\";\nimport Button from \"./components/Button\";\nimport Column from \"./components/Column\";\nimport Wrapper from \"./components/Wrapper\";\nimport Modal from \"./components/Modal\";\nimport Header from \"./components/Header\";\nimport Loader from \"./components/Loader\";\nimport { fonts } from \"./styles\";\nimport { apiGetAccountAssets, apiSubmitTransactions } from \"./helpers/api\";\nimport { IAssetData, IWalletTransaction, SignTxnParams } from \"./helpers/types\";\nimport Banner from \"./components/Banner\";\nimport AccountAssets from \"./components/AccountAssets\";\nimport { Scenario, scenarios, signTxnWithTestAccount } from \"./scenarios\";\n\nconst SLayout = styled.div`\n  position: relative;\n  width: 100%;\n  /* height: 100%; */\n  min-height: 100vh;\n  text-align: center;\n`;\n\nconst SContent = styled(Wrapper as any)`\n  width: 100%;\n  height: 100%;\n  padding: 0 16px;\n`;\n\nconst SLanding = styled(Column as any)`\n  height: 600px;\n`;\n\nconst SButtonContainer = styled(Column as any)`\n  width: 250px;\n  margin: 50px 0;\n`;\n\nconst SConnectButton = styled(Button as any)`\n  border-radius: 8px;\n  font-size: ${fonts.size.medium};\n  height: 44px;\n  width: 100%;\n  margin: 12px 0;\n`;\n\nconst SContainer = styled.div`\n  height: 100%;\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  word-break: break-word;\n`;\n\nconst SModalContainer = styled.div`\n  width: 100%;\n  position: relative;\n  word-wrap: break-word;\n`;\n\nconst SModalTitle = styled.div`\n  margin: 1em 0;\n  font-size: 20px;\n  font-weight: 700;\n`;\n\nconst SModalButton = styled.button`\n  margin: 1em 0;\n  font-size: 18px;\n  font-weight: 700;\n`;\n\nconst SModalParagraph = styled.p`\n  margin-top: 30px;\n`;\n\n// @ts-ignore\nconst SBalances = styled(SLanding as any)`\n  height: 100%;\n  & h3 {\n    padding-top: 30px;\n  }\n`;\n\nconst STable = styled(SContainer as any)`\n  flex-direction: column;\n  text-align: left;\n`;\n\nconst SRow = styled.div`\n  width: 100%;\n  display: flex;\n  margin: 6px 0;\n`;\n\nconst SKey = styled.div`\n  width: 30%;\n  font-weight: 700;\n`;\n\nconst SValue = styled.div`\n  width: 70%;\n  font-family: monospace;\n`;\n\nconst STestButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst STestButton = styled(Button as any)`\n  border-radius: 8px;\n  font-size: ${fonts.size.medium};\n  height: 64px;\n  width: 100%;\n  max-width: 175px;\n  margin: 12px;\n`;\n\ninterface IAppState {\n  connector: WalletConnect | null;\n  fetching: boolean;\n  connected: boolean;\n  showModal: boolean;\n  pendingRequest: boolean;\n  signedTxns: Uint8Array[] | null;\n  pendingSubmission: boolean | number;\n  pendingSubmissionError: Error | null;\n  uri: string;\n  accounts: string[];\n  address: string;\n  result: any | null;\n  assets: IAssetData[];\n}\n\nconst INITIAL_STATE: IAppState = {\n  connector: null,\n  fetching: false,\n  connected: false,\n  showModal: false,\n  pendingRequest: false,\n  signedTxns: null,\n  pendingSubmission: false,\n  pendingSubmissionError: null,\n  uri: \"\",\n  accounts: [],\n  address: \"\",\n  result: null,\n  assets: [],\n};\n\nclass App extends React.Component<any, any> {\n  public state: IAppState = {\n    ...INITIAL_STATE,\n  };\n\n  public walletConnectInit = async () => {\n    // bridge url\n    const bridge = \"https://bridge.walletconnect.org\";\n\n    // create new connector\n    const connector = new WalletConnect({ bridge, qrcodeModal: QRCodeModal });\n\n    await this.setState({ connector });\n\n    // check if already connected\n    if (!connector.connected) {\n      // create new session\n      await connector.createSession();\n    }\n\n    // subscribe to events\n    await this.subscribeToEvents();\n  };\n  public subscribeToEvents = () => {\n    const { connector } = this.state;\n\n    if (!connector) {\n      return;\n    }\n\n    connector.on(\"session_update\", async (error, payload) => {\n      console.log(`connector.on(\"session_update\")`);\n\n      if (error) {\n        throw error;\n      }\n\n      const { accounts } = payload.params[0];\n      this.onSessionUpdate(accounts);\n    });\n\n    connector.on(\"connect\", (error, payload) => {\n      console.log(`connector.on(\"connect\")`);\n\n      if (error) {\n        throw error;\n      }\n\n      this.onConnect(payload);\n    });\n\n    connector.on(\"disconnect\", (error, payload) => {\n      console.log(`connector.on(\"disconnect\")`);\n\n      if (error) {\n        throw error;\n      }\n\n      this.onDisconnect();\n    });\n\n    if (connector.connected) {\n      const { accounts } = connector;\n      const address = accounts[0];\n      this.setState({\n        connected: true,\n        accounts,\n        address,\n      });\n      this.onSessionUpdate(accounts);\n    }\n\n    this.setState({ connector });\n  };\n\n  public killSession = async () => {\n    const { connector } = this.state;\n    if (connector) {\n      connector.killSession();\n    }\n    this.resetApp();\n  };\n\n  public resetApp = async () => {\n    await this.setState({ ...INITIAL_STATE });\n  };\n\n  public onConnect = async (payload: IInternalEvent) => {\n    const { accounts } = payload.params[0];\n    const address = accounts[0];\n    await this.setState({\n      connected: true,\n      accounts,\n      address,\n    });\n    this.getAccountAssets();\n  };\n\n  public onDisconnect = async () => {\n    this.resetApp();\n  };\n\n  public onSessionUpdate = async (accounts: string[]) => {\n    const address = accounts[0];\n    await this.setState({ accounts, address });\n    await this.getAccountAssets();\n  };\n\n  public getAccountAssets = async () => {\n    const { address } = this.state;\n    this.setState({ fetching: true });\n    try {\n      // get account balances\n      const assets = await apiGetAccountAssets(address);\n\n      await this.setState({ fetching: false, address, assets });\n    } catch (error) {\n      console.error(error);\n      await this.setState({ fetching: false });\n    }\n  };\n\n  public toggleModal = () =>\n    this.setState({\n      showModal: !this.state.showModal,\n      pendingSubmission: false,\n      pendingSubmissionError: null,\n    });\n\n  public signTxnScenario = async (scenario: Scenario) => {\n    const { connector, address } = this.state;\n\n    if (!connector) {\n      return;\n    }\n\n    try {\n      const txnsToSign = await scenario(address);\n\n      // open modal\n      this.toggleModal();\n\n      // toggle pending request indicator\n      this.setState({ pendingRequest: true });\n\n      const walletTxns: IWalletTransaction[] = txnsToSign.map(({ txn, shouldSign, authAddr }) => ({\n        txn: Buffer.from(algosdk.encodeUnsignedTransaction(txn)).toString(\"base64\"),\n        signers: shouldSign ? undefined : [], // TODO: put auth addr in signers array\n        authAddr,\n      }));\n\n      // sign transaction\n      const requestParams: SignTxnParams = [walletTxns];\n      const request = formatJsonRpcRequest(\"algo_signTxn\", requestParams);\n      const result: Array<string | null> = await connector.sendCustomRequest(request);\n\n      const signedPartialTxns: Array<Uint8Array | null> = result.map((r, i) => {\n        if (r == null) {\n          if (!txnsToSign[i].shouldSign) {\n            return null;\n          }\n          throw new Error(`Transaction at index ${i}: was not signed when it should have been`);\n        }\n\n        if (!txnsToSign[i].shouldSign) {\n          throw new Error(`Transaction at index ${i} was signed when it should not have been`);\n        }\n\n        const rawSignedTxn = Buffer.from(r, \"base64\");\n        return new Uint8Array(rawSignedTxn);\n      });\n\n      const signedTxns: Uint8Array[] = signedPartialTxns.map((stxn, i) => {\n        if (stxn) {\n          return stxn;\n        }\n\n        return signTxnWithTestAccount(txnsToSign[i].txn);\n      });\n\n      const signedTxnInfo: Array<{\n        txID: string;\n        signingAddress?: string;\n        signature: string;\n      } | null> = signedPartialTxns.map((rawSignedTxn, i) => {\n        if (rawSignedTxn == null) {\n          return null;\n        }\n\n        const signedTxn = algosdk.decodeSignedTransaction(rawSignedTxn);\n        const txn = (signedTxn.txn as unknown) as algosdk.Transaction;\n        const txID = txn.txID();\n        const unsignedTxID = txnsToSign[i].txn.txID();\n\n        if (txID !== unsignedTxID) {\n          throw new Error(\n            `Signed transaction at index ${i} differs from unsigned transaction. Got ${txID}, expected ${unsignedTxID}`,\n          );\n        }\n\n        return {\n          txID,\n          signingAddress: signedTxn.sgnr ? algosdk.encodeAddress(signedTxn.sgnr) : undefined,\n          signature: Buffer.from(signedTxn.sig).toString(\"base64\"),\n        };\n      });\n\n      console.log(\"Signed txn info:\", signedTxnInfo);\n\n      // format displayed result\n      const formattedResult = {\n        method: \"algo_signTxn\",\n        result: signedTxnInfo,\n      };\n\n      // display result\n      this.setState({\n        connector,\n        pendingRequest: false,\n        signedTxns,\n        result: formattedResult || null,\n      });\n    } catch (error) {\n      console.error(error);\n      this.setState({ connector, pendingRequest: false, result: null });\n    }\n  };\n\n  public async submitSignedTransaction() {\n    const { signedTxns } = this.state;\n    if (signedTxns == null) {\n      throw new Error(\"Transactions to submit are null\");\n    }\n\n    this.setState({ pendingSubmission: true });\n\n    try {\n      const confirmedRound = await apiSubmitTransactions(signedTxns);\n      if (this.state.pendingSubmission === true) {\n        this.setState({ pendingSubmission: confirmedRound, pendingSubmissionError: null });\n      }\n      console.log(`Transaction confirmed at round ${confirmedRound}`);\n    } catch (err) {\n      if (this.state.pendingSubmission === true) {\n        this.setState({ pendingSubmissionError: err });\n      }\n      console.error(\"Error submitting transaction:\", err);\n    }\n  }\n\n  public render = () => {\n    const {\n      assets,\n      address,\n      connected,\n      fetching,\n      showModal,\n      pendingRequest,\n      pendingSubmission,\n      pendingSubmissionError,\n      result,\n    } = this.state;\n    return (\n      <SLayout>\n        <Column maxWidth={1000} spanHeight>\n          <Header connected={connected} address={address} killSession={this.killSession} />\n          <SContent>\n            {!address && !assets.length ? (\n              <SLanding center>\n                <h3>\n                  {`Try out WalletConnect`}\n                  <br />\n                  <span>{`v${process.env.REACT_APP_VERSION}`}</span>\n                </h3>\n                <SButtonContainer>\n                  <SConnectButton left onClick={this.walletConnectInit} fetching={fetching}>\n                    {\"Connect to WalletConnect\"}\n                  </SConnectButton>\n                </SButtonContainer>\n              </SLanding>\n            ) : (\n              <SBalances>\n                <Banner />\n                <h3>Balances</h3>\n                {!fetching ? (\n                  <AccountAssets assets={assets} />\n                ) : (\n                  <Column center>\n                    <SContainer>\n                      <Loader />\n                    </SContainer>\n                  </Column>\n                )}\n                <h3>Actions</h3>\n                <Column center>\n                  <STestButtonContainer>\n                    {scenarios.map(({ name, scenario }) => (\n                      <STestButton left key={name} onClick={() => this.signTxnScenario(scenario)}>\n                        {name}\n                      </STestButton>\n                    ))}\n                  </STestButtonContainer>\n                </Column>\n              </SBalances>\n            )}\n          </SContent>\n        </Column>\n        <Modal show={showModal} toggleModal={this.toggleModal}>\n          {pendingRequest ? (\n            <SModalContainer>\n              <SModalTitle>{\"Pending Call Request\"}</SModalTitle>\n              <SContainer>\n                <Loader />\n                <SModalParagraph>{\"Approve or reject request using your wallet\"}</SModalParagraph>\n              </SContainer>\n            </SModalContainer>\n          ) : result ? (\n            <SModalContainer>\n              <SModalTitle>{\"Call Request Approved\"}</SModalTitle>\n              <STable>\n                {Object.keys(result).map(key => (\n                  <SRow key={key}>\n                    <SKey>{key}</SKey>\n                    <SValue>{JSON.stringify(result[key])}</SValue>\n                  </SRow>\n                ))}\n              </STable>\n              <SModalButton\n                onClick={() => this.submitSignedTransaction()}\n                disabled={pendingSubmission !== false}\n              >\n                {\"Submit transaction to network.\"}\n              </SModalButton>\n              {pendingSubmission === true && !pendingSubmissionError && (\n                <SModalTitle>{\"Submitting...\"}</SModalTitle>\n              )}\n              {typeof pendingSubmission === \"number\" && (\n                <SModalTitle>{`Transaction confirmed at round ${pendingSubmission}`}</SModalTitle>\n              )}\n              {!!pendingSubmissionError && (\n                <SModalTitle>\n                  {\"Transaction rejected by network. See console for more information.\"}\n                </SModalTitle>\n              )}\n            </SModalContainer>\n          ) : (\n            <SModalContainer>\n              <SModalTitle>{\"Call Request Rejected\"}</SModalTitle>\n            </SModalContainer>\n          )}\n        </Modal>\n      </SLayout>\n    );\n  };\n}\n\nexport default App;\n","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n`;\n\ninterface IWrapperStyleProps {\n  center: boolean;\n}\n\nconst SWrapper = styled.div<IWrapperStyleProps>`\n  will-change: transform, opacity;\n  animation: ${fadeIn} 0.7s ease 0s normal 1;\n  min-height: 200px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: ${({ center }) => (center ? `center` : `flex-start`)};\n`;\n\ninterface IWrapperProps extends IWrapperStyleProps {\n  children: React.ReactNode;\n}\n\nconst Wrapper = (props: IWrapperProps) => {\n  const { children, center } = props;\n  return (\n    <SWrapper {...props} center={center}>\n      {children}\n    </SWrapper>\n  );\n};\n\nWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n  center: PropTypes.bool,\n};\n\nWrapper.defaultProps = {\n  center: false,\n};\n\nexport default Wrapper;\n","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { colors, transitions } from \"../styles\";\n\ninterface ILightboxStyleProps {\n  show: boolean;\n  offset: number;\n  opacity?: number;\n}\n\nconst SLightbox = styled.div<ILightboxStyleProps>`\n  transition: opacity 0.1s ease-in-out;\n  text-align: center;\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  margin-left: -50vw;\n  top: ${({ offset }) => (offset ? `-${offset}px` : 0)};\n  left: 50%;\n  z-index: 2;\n  will-change: opacity;\n  background-color: ${({ opacity }) => {\n    let alpha = 0.4;\n    if (typeof opacity === \"number\") {\n      alpha = opacity;\n    }\n    return `rgba(0, 0, 0, ${alpha})`;\n  }};\n  opacity: ${({ show }) => (show ? 1 : 0)};\n  visibility: ${({ show }) => (show ? \"visible\" : \"hidden\")};\n  pointer-events: ${({ show }) => (show ? \"auto\" : \"none\")};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SModalContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst SHitbox = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\ninterface ICloseButtonStyleProps {\n  size: number;\n  color: string;\n  onClick?: any;\n}\n\nconst SCloseButton = styled.div<ICloseButtonStyleProps>`\n  transition: ${transitions.short};\n  position: absolute;\n  width: ${({ size }) => `${size}px`};\n  height: ${({ size }) => `${size}px`};\n  right: ${({ size }) => `${size / 1.6667}px`};\n  top: ${({ size }) => `${size / 1.6667}px`};\n  opacity: 0.5;\n  cursor: pointer;\n  &:hover {\n    opacity: 1;\n  }\n  &:before,\n  &:after {\n    position: absolute;\n    content: \" \";\n    height: ${({ size }) => `${size}px`};\n    width: 2px;\n    background: ${({ color }) => `rgb(${colors[color]})`};\n  }\n  &:before {\n    transform: rotate(45deg);\n  }\n  &:after {\n    transform: rotate(-45deg);\n  }\n`;\n\nconst SCard = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 500px;\n  padding: 25px;\n  background-color: rgb(${colors.white});\n  border-radius: 6px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SModalContent = styled.div`\n  position: relative;\n  width: 100%;\n  position: relative;\n  word-wrap: break-word;\n`;\n\ninterface IModalState {\n  offset: number;\n}\n\ninterface IModalProps {\n  children: React.ReactNode;\n  show: boolean;\n  toggleModal: any;\n  opacity?: number;\n}\n\nconst INITIAL_STATE: IModalState = {\n  offset: 0,\n};\n\nclass Modal extends React.Component<IModalProps, IModalState> {\n  public static propTypes = {\n    children: PropTypes.node.isRequired,\n    show: PropTypes.bool.isRequired,\n    toggleModal: PropTypes.func.isRequired,\n    opacity: PropTypes.number,\n  };\n\n  public lightbox?: HTMLDivElement | null;\n\n  public state: IModalState = {\n    ...INITIAL_STATE,\n  };\n\n  public componentDidUpdate() {\n    if (this.lightbox) {\n      const lightboxRect = this.lightbox.getBoundingClientRect();\n      const offset = lightboxRect.top > 0 ? lightboxRect.top : 0;\n\n      if (offset !== INITIAL_STATE.offset && offset !== this.state.offset) {\n        this.setState({ offset });\n      }\n    }\n  }\n\n  public toggleModal = async () => {\n    const d = typeof window !== \"undefined\" ? document : \"\";\n    const body = d ? d.body || d.getElementsByTagName(\"body\")[0] : \"\";\n    if (body) {\n      if (this.props.show) {\n        body.style.position = \"\";\n      } else {\n        body.style.position = \"fixed\";\n      }\n    }\n    this.props.toggleModal();\n  };\n\n  public render() {\n    const { offset } = this.state;\n    const { children, show, opacity } = this.props;\n    return (\n      <SLightbox show={show} offset={offset} opacity={opacity} ref={c => (this.lightbox = c)}>\n        <SModalContainer>\n          <SHitbox onClick={this.toggleModal} />\n\n          <SCard>\n            <SCloseButton size={25} color={\"dark\"} onClick={this.toggleModal} />\n            <SModalContent>{children}</SModalContent>\n          </SCard>\n        </SModalContainer>\n      </SLightbox>\n    );\n  }\n}\n\nexport default Modal;\n","module.exports = __webpack_public_path__ + \"static/media/walletconnect-banner.e1cb8d21.png\";","module.exports = __webpack_public_path__ + \"static/media/algo.6c6f52b0.svg\";","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\ninterface IIconStyleProps {\n  size: number;\n}\n\nconst SIcon = styled.img<IIconStyleProps>`\n  width: ${({ size }) => `${size}px`};\n  height: ${({ size }) => `${size}px`};\n`;\n\nconst Icon = (props: any) => {\n  const { src, fallback, size } = props;\n  return (\n    <SIcon\n      {...props}\n      src={src}\n      size={size}\n      onError={(event: any) => {\n        if (fallback) {\n          event.target.src = fallback;\n        }\n      }}\n    />\n  );\n};\n\nIcon.propTypes = {\n  src: PropTypes.string,\n  fallback: PropTypes.string,\n  size: PropTypes.number,\n};\n\nIcon.defaultProps = {\n  src: null,\n  fallback: \"\",\n  size: 20,\n};\n\nexport default Icon;\n","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport Icon from \"./Icon\";\n\nconst ASAIcon = (props: { assetID: number }) => {\n  const src = `https://algoexplorer.io/images/assets/big/light/${props.assetID}.png`;\n  return <Icon src={src} />;\n};\n\nASAIcon.propTypes = {\n  assetID: PropTypes.number,\n  size: PropTypes.number,\n};\n\nASAIcon.defaultProps = {\n  assetID: 0,\n  size: 20,\n};\n\nexport default ASAIcon;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"./Icon\";\nimport ASAIcon from \"./ASAIcon\";\nimport algo from \"../assets/algo.svg\";\nimport { formatBigNumWithDecimals } from \"../helpers/utilities\";\nimport { IAssetData } from \"../helpers/types\";\n\nconst SAssetRow = styled.div`\n  width: 100%;\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\nconst SAssetRowLeft = styled.div`\n  display: flex;\n`;\nconst SAssetName = styled.div`\n  display: flex;\n  margin-left: 10px;\n`;\nconst SAssetRowRight = styled.div`\n  display: flex;\n`;\nconst SAssetBalance = styled.div`\n  display: flex;\n`;\n\nconst AssetRow = (props: { asset: IAssetData }) => {\n  const { asset } = props;\n  const nativeCurrencyIcon = asset.id === 0 ? algo : null;\n  return (\n    <SAssetRow {...props}>\n      <SAssetRowLeft>\n        {nativeCurrencyIcon ? <Icon src={nativeCurrencyIcon} /> : <ASAIcon assetID={asset.id} />}\n        <SAssetName>{asset.name}</SAssetName>\n      </SAssetRowLeft>\n      <SAssetRowRight>\n        <SAssetBalance>\n          {`${formatBigNumWithDecimals(asset.amount, asset.decimals)} ${asset.unitName || \"units\"}`}\n        </SAssetBalance>\n      </SAssetRowRight>\n    </SAssetRow>\n  );\n};\n\nexport default AssetRow;\n","import * as React from \"react\";\nimport Column from \"./Column\";\nimport AssetRow from \"./AssetRow\";\nimport { IAssetData } from \"../helpers/types\";\n\nconst AccountAssets = (props: { assets: IAssetData[] }) => {\n  const { assets } = props;\n\n  const nativeCurrency = assets.find((asset: IAssetData) => asset && asset.id === 0) || {\n    id: 0,\n    amount: BigInt(0),\n    creator: \"\",\n    frozen: false,\n    decimals: 6,\n    name: \"Algo\",\n    unitName: \"Algo\",\n  };\n\n  const tokens = assets.filter((asset: IAssetData) => asset && asset.id !== 0);\n\n  return (\n    <Column center>\n      <AssetRow key={nativeCurrency.id} asset={nativeCurrency} />\n      {tokens.map(token => (\n        <AssetRow key={token.id} asset={token} />\n      ))}\n    </Column>\n  );\n};\n\nexport default AccountAssets;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\ninterface IBlockieStyleProps {\n  size?: number;\n}\n\ninterface IBlockieProps extends IBlockieStyleProps {\n  address: string;\n}\n\nconst SBlockieWrapper = styled.div<IBlockieStyleProps>`\n  width: ${({ size }) => `${size}px`};\n  height: ${({ size }) => `${size}px`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 6px;\n  overflow: hidden;\n  & img {\n    width: 100%;\n  }\n`;\n\nconst Blockie = (props: IBlockieProps) => {\n  const seed = props.address.toLowerCase() || \"\";\n  const imgUrl = window.blockies\n    .create({\n      seed,\n    })\n    .toDataURL();\n  return (\n    <SBlockieWrapper {...props} size={props.size}>\n      <img src={imgUrl} alt={props.address} />\n    </SBlockieWrapper>\n  );\n};\n\nBlockie.defaultProps = {\n  address: \"0x0000000000000000000000000000000000000000\",\n  size: 30,\n};\n\nexport default Blockie;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport * as PropTypes from \"prop-types\";\nimport Blockie from \"./Blockie\";\nimport Banner from \"./Banner\";\nimport { ellipseAddress } from \"../helpers/utilities\";\nimport { transitions } from \"../styles\";\n\nconst SHeader = styled.div`\n  margin-top: -1px;\n  margin-bottom: 1px;\n  width: 100%;\n  height: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 16px;\n`;\n\nconst SActiveAccount = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  font-weight: 500;\n`;\n\nconst SActiveChain = styled(SActiveAccount as any)`\n  flex-direction: column;\n  text-align: left;\n  align-items: flex-start;\n  & p {\n    font-size: 0.8em;\n    margin: 0;\n    padding: 0;\n  }\n  & p:nth-child(2) {\n    font-weight: bold;\n  }\n`;\n\nconst SBlockie = styled(Blockie as any)`\n  margin-right: 10px;\n`;\n\ninterface IHeaderStyle {\n  connected: boolean;\n}\n\nconst SAddress = styled.p<IHeaderStyle>`\n  transition: ${transitions.base};\n  font-weight: bold;\n  margin: ${({ connected }) => (connected ? \"-2px auto 0.7em\" : \"0\")};\n`;\n\nconst SDisconnect = styled.div<IHeaderStyle>`\n  transition: ${transitions.button};\n  font-size: 12px;\n  font-family: monospace;\n  position: absolute;\n  right: 0;\n  top: 20px;\n  opacity: 0.7;\n  cursor: pointer;\n\n  opacity: ${({ connected }) => (connected ? 1 : 0)};\n  visibility: ${({ connected }) => (connected ? \"visible\" : \"hidden\")};\n  pointer-events: ${({ connected }) => (connected ? \"auto\" : \"none\")};\n\n  &:hover {\n    transform: translateY(-1px);\n    opacity: 0.5;\n  }\n`;\n\ninterface IHeaderProps {\n  killSession: () => void;\n  connected: boolean;\n  address: string;\n}\n\nconst Header = (props: IHeaderProps) => {\n  const { connected, address, killSession } = props;\n  return (\n    <SHeader {...props}>\n      {connected ? (\n        <SActiveChain>\n          <p>{`Connected to Algorand TestNet`}</p>\n        </SActiveChain>\n      ) : (\n        <Banner />\n      )}\n      {address && (\n        <SActiveAccount>\n          <SBlockie address={address} />\n          <SAddress connected={connected}>{ellipseAddress(address)}</SAddress>\n          <SDisconnect connected={connected} onClick={killSession}>\n            {\"Disconnect\"}\n          </SDisconnect>\n        </SActiveAccount>\n      )}\n    </SHeader>\n  );\n};\n\nHeader.propTypes = {\n  killSession: PropTypes.func.isRequired,\n  address: PropTypes.string,\n};\n\nexport default Header;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport App from \"./App\";\nimport { globalStyle } from \"./styles\";\nconst GlobalStyle = createGlobalStyle`\n  ${globalStyle}\n`;\n\ndeclare global {\n  // tslint:disable-next-line\n  interface Window {\n    blockies: any;\n  }\n}\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>,\n  document.getElementById(\"root\"),\n);\n","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\ninterface IColumnStyleProps {\n  spanHeight: boolean;\n  maxWidth: number;\n  center: boolean;\n}\n\ninterface IColumnProps extends IColumnStyleProps {\n  children: React.ReactNode;\n}\n\nconst SColumn = styled.div<IColumnStyleProps>`\n  position: relative;\n  width: 100%;\n  height: ${({ spanHeight }) => (spanHeight ? \"100%\" : \"auto\")};\n  max-width: ${({ maxWidth }) => `${maxWidth}px`};\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: ${({ center }) => (center ? \"center\" : \"flex-start\")};\n`;\n\nconst Column = (props: IColumnProps) => {\n  const { children, spanHeight, maxWidth, center } = props;\n  return (\n    <SColumn {...props} spanHeight={spanHeight} maxWidth={maxWidth} center={center}>\n      {children}\n    </SColumn>\n  );\n};\n\nColumn.propTypes = {\n  children: PropTypes.node.isRequired,\n  spanHeight: PropTypes.bool,\n  maxWidth: PropTypes.number,\n  center: PropTypes.bool,\n};\n\nColumn.defaultProps = {\n  spanHeight: false,\n  maxWidth: 600,\n  center: false,\n};\n\nexport default Column;\n","import * as React from \"react\";\nimport * as PropTypes from \"prop-types\";\nimport styled, { keyframes } from \"styled-components\";\nimport { colors } from \"../styles\";\n\nconst load = keyframes`\n  0% {\n    transform: scale(1.0);\n  }\n  5% {\n    transform: scale(1.0);\n  }\n  50% {\n    transform: scale(0.8);\n  }\n  95% {\n    transform: scale(1.0);\n  }\n  100% {\n    transform: scale(1.0);\n  }\n`;\n\ninterface ILoaderStyleProps {\n  size: number;\n}\n\ninterface ILoaderProps extends ILoaderStyleProps {\n  color: string;\n}\n\nconst SLoader = styled.svg<ILoaderStyleProps>`\n  width: ${({ size }) => `${size}px`};\n  height: ${({ size }) => `${size}px`};\n  animation: ${load} 1s infinite cubic-bezier(0.25, 0, 0.75, 1);\n  transform: translateZ(0);\n`;\n\nconst Loader = (props: ILoaderProps) => {\n  const { size, color } = props;\n  const rgb = `rgb(${colors[color]})`;\n  return (\n    <SLoader viewBox=\"0 0 186 187\" size={size}>\n      <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n        <path\n          d=\"M60,10.34375 C32.3857625,10.34375 10,32.7295125 10,60.34375 L10,126.34375 C10,153.957987 32.3857625,176.34375 60,176.34375 L126,176.34375 C153.614237,176.34375 176,153.957987 176,126.34375 L176,60.34375 C176,32.7295125 153.614237,10.34375 126,10.34375 L60,10.34375 Z M60,0.34375 L126,0.34375 C159.137085,0.34375 186,27.206665 186,60.34375 L186,126.34375 C186,159.480835 159.137085,186.34375 126,186.34375 L60,186.34375 C26.862915,186.34375 0,159.480835 0,126.34375 L0,60.34375 C0,27.206665 26.862915,0.34375 60,0.34375 Z\"\n          id=\"Rectangle-Copy\"\n          fill={rgb}\n          fillRule=\"nonzero\"\n        />\n        <rect id=\"Rectangle\" fill={rgb} x=\"44\" y=\"44.34375\" width=\"98\" height=\"98\" rx=\"35\" />\n      </g>\n    </SLoader>\n  );\n};\n\nLoader.propTypes = {\n  size: PropTypes.number,\n  color: PropTypes.string,\n};\n\nLoader.defaultProps = {\n  size: 40,\n  color: \"lightBlue\",\n};\n\nexport default Loader;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport banner from \"../assets/walletconnect-banner.png\";\n\nconst SBannerWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n`;\n\nconst SBanner = styled.div`\n  width: 275px;\n  height: 45px;\n  background: url(${banner}) no-repeat;\n  background-size: cover;\n  background-position: center;\n`;\n\nconst Banner = () => (\n  <SBannerWrapper>\n    <SBanner />\n  </SBannerWrapper>\n);\n\nexport default Banner;\n","export function capitalize(string: string): string {\n  return string\n    .split(\" \")\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n    .join(\" \");\n}\n\nexport function ellipseText(text = \"\", maxLength = 9999): string {\n  if (text.length <= maxLength) {\n    return text;\n  }\n  const _maxLength = maxLength - 3;\n  let ellipse = false;\n  let currentLength = 0;\n  const result =\n    text\n      .split(\" \")\n      .filter(word => {\n        currentLength += word.length;\n        if (ellipse || currentLength >= _maxLength) {\n          ellipse = true;\n          return false;\n        } else {\n          return true;\n        }\n      })\n      .join(\" \") + \"...\";\n  return result;\n}\n\nexport function ellipseAddress(address = \"\", width = 6): string {\n  return `${address.slice(0, width)}...${address.slice(-width)}`;\n}\n\nexport function padLeft(n: string, width: number, z?: string): string {\n  z = z || \"0\";\n  n = n + \"\";\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nexport function sanitizeHex(hex: string): string {\n  hex = hex.substring(0, 2) === \"0x\" ? hex.substring(2) : hex;\n  if (hex === \"\") {\n    return \"\";\n  }\n  hex = hex.length % 2 !== 0 ? \"0\" + hex : hex;\n  return \"0x\" + hex;\n}\n\nexport function removeHexPrefix(hex: string): string {\n  return hex.toLowerCase().replace(\"0x\", \"\");\n}\n\nexport function getDataString(func: string, arrVals: any[]): string {\n  let val = \"\";\n  for (let i = 0; i < arrVals.length; i++) {\n    val += padLeft(arrVals[i], 64);\n  }\n  const data = func + val;\n  return data;\n}\n\nexport function isMobile(): boolean {\n  let mobile = false;\n\n  function hasTouchEvent(): boolean {\n    try {\n      document.createEvent(\"TouchEvent\");\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function hasMobileUserAgent(): boolean {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(\n        navigator.userAgent,\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(\n        navigator.userAgent.substr(0, 4),\n      )\n    ) {\n      return true;\n    } else if (hasTouchEvent()) {\n      return true;\n    }\n    return false;\n  }\n\n  mobile = hasMobileUserAgent();\n\n  return mobile;\n}\n\nexport function formatBigNumWithDecimals(num: bigint, decimals: number): string {\n  const singleUnit = BigInt(\"1\" + \"0\".repeat(decimals));\n  const wholeUnits = num / singleUnit;\n  const fractionalUnits = num % singleUnit;\n\n  return wholeUnits.toString() + \".\" + fractionalUnits.toString().padStart(decimals, \"0\");\n}\n","export const colors = {\n  white: \"255, 255, 255\",\n  black: \"0, 0, 0\",\n  dark: \"12, 12, 13\",\n  grey: \"169, 169, 188\",\n  darkGrey: \"113, 119, 138\",\n  lightGrey: \"212, 212, 212\",\n  blue: \"101, 127, 230\",\n  lightBlue: \"64, 153, 255\",\n  yellow: \"250, 188, 45\",\n  orange: \"246, 133, 27\",\n  green: \"84, 209, 146\",\n  pink: \"255, 51, 102\",\n  red: \"214, 75, 71\",\n  purple: \"110, 107, 233\",\n};\n\nexport const fonts = {\n  size: {\n    tiny: \"10px\",\n    small: \"14px\",\n    medium: \"16px\",\n    large: \"18px\",\n    h1: \"60px\",\n    h2: \"50px\",\n    h3: \"40px\",\n    h4: \"32px\",\n    h5: \"24px\",\n    h6: \"20px\",\n  },\n  weight: {\n    normal: 400,\n    medium: 500,\n    semibold: 600,\n    bold: 700,\n    extrabold: 800,\n  },\n  family: {\n    OpenSans: `\"Open Sans\", sans-serif`,\n  },\n};\n\nexport const transitions = {\n  short: \"all 0.1s ease-in-out\",\n  base: \"all 0.2s ease-in-out\",\n  long: \"all 0.3s ease-in-out\",\n  button: \"all 0.15s ease-in-out\",\n};\n\nexport const shadows = {\n  soft:\n    \"0 4px 6px 0 rgba(50, 50, 93, 0.11), 0 1px 3px 0 rgba(0, 0, 0, 0.08), inset 0 0 1px 0 rgba(0, 0, 0, 0.06)\",\n  medium:\n    \"0 3px 6px 0 rgba(0, 0, 0, 0.06), 0 0 1px 0 rgba(50, 50, 93, 0.02), 0 5px 10px 0 rgba(59, 59, 92, 0.08)\",\n  big: \"0 15px 35px 0 rgba(50, 50, 93, 0.06), 0 5px 15px 0 rgba(50, 50, 93, 0.15)\",\n  hover:\n    \"0 7px 14px 0 rgba(50, 50, 93, 0.1), 0 3px 6px 0 rgba(0, 0, 0, 0.08), inset 0 0 1px 0 rgba(0, 0, 0, 0.06)\",\n};\n\nexport const responsive = {\n  xs: {\n    min: \"min-width: 467px\",\n    max: \"max-width: 468px\",\n  },\n  sm: {\n    min: \"min-width: 639px\",\n    max: \"max-width: 640px\",\n  },\n  md: {\n    min: \"min-width: 959px\",\n    max: \"max-width: 960px\",\n  },\n  lg: {\n    min: \"min-width: 1023px\",\n    max: \"max-width: 1024px\",\n  },\n  xl: {\n    min: \"min-width: 1399px\",\n    max: \"max-width: 1400px\",\n  },\n};\n\nexport const globalStyle = `\n\n  html, body, #root {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    font-family: ${fonts.family.OpenSans};\n    font-style: normal;\n    font-stretch: normal;\n    font-weight: ${fonts.weight.normal};\n    font-size: ${fonts.size.medium};\n    background-color: rgb(${colors.white});\n    color: rgb(${colors.dark});\n    overflow-y:auto;\n    text-rendering: optimizeLegibility;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  \t-webkit-text-size-adjust: 100%;\n    -webkit-overflow-scrolling: touch;\n    -ms-text-size-adjust: 100%;\n    -webkit-text-size-adjust: 100%;  \n  }\n\n  button {\n    border-style: none;\n    line-height: 1em;\n    background-image: none;\n    outline: 0;\n    -webkit-box-shadow: none;\n            box-shadow: none;\n  }\n\n  [tabindex] {\n    outline: none;\n    width: 100%;\n    height: 100%;\n  }\n\n  a, p, h1, h2, h3, h4, h5, h6 {\n  \ttext-decoration: none;\n  \tmargin: 0;\n    padding: 0;\n    margin: 0.7em 0;\n  }\n\n  h1 {\n    font-size: ${fonts.size.h1}\n  }\n  h2 {\n    font-size: ${fonts.size.h2}\n  }\n  h3 {\n    font-size: ${fonts.size.h3}\n  }\n  h4 {\n    font-size: ${fonts.size.h4}\n  }\n  h5 {\n    font-size: ${fonts.size.h5}\n  }\n  h6 {\n    font-size: ${fonts.size.h6}\n  }\n\n  a {\n    background-color: transparent;\n    -webkit-text-decoration-skip: objects;  \n    text-decoration: none;\n    color: inherit;\n    outline: none;\n  }\n\n  b,\n  strong {\n    font-weight: inherit;\n    font-weight: bolder;\n  }\n\n  ul, li {\n  \tlist-style: none;\n  \tmargin: 0;\n  \tpadding: 0;\n  }\n\n  * {\n    box-sizing: border-box !important;\n  }\n\n\n  input {\n    -webkit-appearance: none;\n  }\n\n  article,\n  aside,\n  details,\n  figcaption,\n  figure,\n  footer,\n  header,\n  main,\n  menu,\n  nav,\n  section,\n  summary {\n    display: block;\n  }\n  audio,\n  canvas,\n  progress,\n  video {\n    display: inline-block;\n  }\n\n  input[type=\"color\"],\n  input[type=\"date\"],\n  input[type=\"datetime\"],\n  input[type=\"datetime-local\"],\n  input[type=\"email\"],\n  input[type=\"month\"],\n  input[type=\"number\"],\n  input[type=\"password\"],\n  input[type=\"search\"],\n  input[type=\"tel\"],\n  input[type=\"text\"],\n  input[type=\"time\"],\n  input[type=\"url\"],\n  input[type=\"week\"],\n  select:focus,\n  textarea {\n    font-size: 16px;\n  }\n`;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"./Loader\";\nimport { colors, fonts, shadows, transitions } from \"../styles\";\n\ninterface IButtonStyleProps {\n  fetching: boolean;\n  outline: boolean;\n  type: \"button\" | \"submit\" | \"reset\";\n  color: string;\n  disabled: boolean;\n  icon: any;\n  left: boolean;\n}\n\ninterface IButtonProps extends IButtonStyleProps {\n  children: React.ReactNode;\n  onClick?: any;\n}\n\nconst SIcon = styled.div`\n  position: absolute;\n  height: 15px;\n  width: 15px;\n  margin: 0 8px;\n  top: calc((100% - 15px) / 2);\n`;\n\nconst SHoverLayer = styled.div`\n  transition: ${transitions.button};\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  background-color: rgb(${colors.white}, 0.1);\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden;\n`;\n\nconst SButton = styled.button<IButtonStyleProps>`\n  transition: ${transitions.button};\n  position: relative;\n  border: none;\n  border-style: none;\n  box-sizing: border-box;\n  background-color: ${({ outline, color }) => (outline ? \"transparent\" : `rgb(${colors[color]})`)};\n  border: ${({ outline, color }) => (outline ? `1px solid rgb(${colors[color]})` : \"none\")};\n  color: ${({ outline, color }) => (outline ? `rgb(${colors[color]})` : `rgb(${colors.white})`)};\n  box-shadow: ${({ outline }) => (outline ? \"none\" : `${shadows.soft}`)};\n  border-radius: 8px;\n  font-size: ${fonts.size.medium};\n  font-weight: ${fonts.weight.semibold};\n  padding: ${({ icon, left }) =>\n    icon ? (left ? \"7px 12px 8px 28px\" : \"7px 28px 8px 12px\") : \"8px 12px\"};\n  cursor: ${({ disabled }) => (disabled ? \"auto\" : \"pointer\")};\n  will-change: transform;\n\n  &:disabled {\n    opacity: 0.6;\n    box-shadow: ${({ outline }) => (outline ? \"none\" : `${shadows.soft}`)};\n  }\n\n  @media (hover: hover) {\n    &:hover {\n      transform: ${({ disabled }) => (!disabled ? \"translateY(-1px)\" : \"none\")};\n      box-shadow: ${({ disabled, outline }) =>\n        !disabled ? (outline ? \"none\" : `${shadows.hover}`) : `${shadows.soft}`};\n    }\n\n    &:hover ${SHoverLayer} {\n      opacity: 1;\n      visibility: visible;\n    }\n  }\n\n  &:active {\n    transform: ${({ disabled }) => (!disabled ? \"translateY(1px)\" : \"none\")};\n    box-shadow: ${({ outline }) => (outline ? \"none\" : `${shadows.soft}`)};\n    color: ${({ outline, color }) =>\n      outline ? `rgb(${colors[color]})` : `rgba(${colors.white}, 0.24)`};\n\n    & ${SIcon} {\n      opacity: 0.8;\n    }\n  }\n\n  & ${SIcon} {\n    right: ${({ left }) => (left ? \"auto\" : \"0\")};\n    left: ${({ left }) => (left ? \"0\" : \"auto\")};\n    display: ${({ icon }) => (icon ? \"block\" : \"none\")};\n    mask: ${({ icon }) => (icon ? `url(${icon}) center no-repeat` : \"none\")};\n    background-color: ${({ outline, color }) =>\n      outline ? `rgb(${colors[color]})` : `rgb(${colors.white})`};\n    transition: 0.15s ease;\n  }\n`;\n\nconst Button = (props: IButtonProps) => (\n  <SButton\n    {...props}\n    type={props.type}\n    outline={props.outline}\n    color={props.color}\n    disabled={props.disabled}\n    icon={props.icon}\n    left={props.left}\n  >\n    <SHoverLayer />\n    <SIcon />\n    {props.fetching ? <Loader size={20} color=\"white\" /> : props.children}\n  </SButton>\n);\n\nButton.defaultProps = {\n  fetching: false,\n  outline: false,\n  type: \"button\",\n  color: \"lightBlue\",\n  disabled: false,\n  icon: null,\n  left: false,\n};\n\nexport default Button;\n","import algosdk from \"algosdk\";\nimport { apiGetTxnParams } from \"./helpers/api\";\n\nconst testAccounts = [\n  algosdk.mnemonicToSecretKey(\n    \"cannon scatter chest item way pulp seminar diesel width tooth enforce fire rug mushroom tube sustain glide apple radar chronic ask plastic brown ability badge\",\n  ),\n  algosdk.mnemonicToSecretKey(\n    \"person congress dragon morning road sweet horror famous bomb engine eager silent home slam civil type melt field dry daring wheel monitor custom above term\",\n  ),\n  algosdk.mnemonicToSecretKey(\n    \"faint protect home drink journey humble tube clinic game rough conduct sell violin discover limit lottery anger baby leaf mountain peasant rude scene abstract casual\",\n  ),\n];\n\nexport function signTxnWithTestAccount(txn: algosdk.Transaction): Uint8Array {\n  const sender = algosdk.encodeAddress(txn.from.publicKey);\n\n  for (const testAccount of testAccounts) {\n    if (testAccount.addr === sender) {\n      return txn.signTxn(testAccount.sk);\n    }\n  }\n\n  throw new Error(`Cannot sign transaction from unknown test account: ${sender}`);\n}\n\nexport type Scenario = (\n  address: string,\n) => Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean; authAddr?: string }>>;\n\nconst singlePayTxn: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const txn = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    amount: 100000,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, shouldSign: true }];\n  return txnsToSign;\n};\n\nconst singlePayTxnWithClose: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const txn = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    amount: 100000,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    closeRemainderTo: testAccounts[1].addr,\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, shouldSign: true }];\n  return txnsToSign;\n};\n\nconst singlePayTxnWithRekey: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const txn = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    amount: 100000,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    rekeyTo: testAccounts[2].addr,\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, shouldSign: true }];\n  return txnsToSign;\n};\n\nconst singlePayTxnWithRekeyAndClose: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const txn = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    amount: 100000,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    rekeyTo: testAccounts[2].addr,\n    closeRemainderTo: testAccounts[1].addr,\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, shouldSign: true }];\n  return txnsToSign;\n};\n\nconst singleAssetOptInTxn: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const assetIndex = 100;\n\n  const txn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: address,\n    amount: 0,\n    assetIndex,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, shouldSign: true }];\n  return txnsToSign;\n};\n\nconst singleAssetTransferTxn: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const assetIndex = 11711; // HipoCoin on TestNet\n\n  const txn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    amount: 1000000,\n    assetIndex,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, shouldSign: true }];\n  return txnsToSign;\n};\n\nconst singleAssetTransferTxnWithClose: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const assetIndex = 100;\n\n  const txn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    amount: 1000000,\n    assetIndex,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    closeRemainderTo: testAccounts[1].addr,\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, shouldSign: true }];\n  return txnsToSign;\n};\n\nconst singleAppOptIn: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const appIndex = 200;\n\n  const txn = algosdk.makeApplicationOptInTxnFromObject({\n    from: address,\n    appIndex,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    appArgs: [Uint8Array.from([0]), Uint8Array.from([0, 1])],\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, shouldSign: true }];\n  return txnsToSign;\n};\n\nconst singleAppCall: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const appIndex = 200;\n\n  const txn = algosdk.makeApplicationNoOpTxnFromObject({\n    from: address,\n    appIndex,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    appArgs: [Uint8Array.from([0]), Uint8Array.from([0, 1])],\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, shouldSign: true }];\n  return txnsToSign;\n};\n\nconst singleAppCallWithRekey: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const appIndex = 200;\n\n  const txn = algosdk.makeApplicationNoOpTxnFromObject({\n    from: address,\n    appIndex,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    appArgs: [Uint8Array.from([0]), Uint8Array.from([0, 1])],\n    rekeyTo: testAccounts[2].addr,\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, shouldSign: true }];\n  return txnsToSign;\n};\n\nconst singleAppCloseOut: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const appIndex = 200;\n\n  const txn = algosdk.makeApplicationCloseOutTxnFromObject({\n    from: address,\n    appIndex,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    appArgs: [Uint8Array.from([0]), Uint8Array.from([0, 1])],\n    suggestedParams,\n  });\n\n  const txnsToSign = [{ txn, shouldSign: true }];\n  return txnsToSign;\n};\n\nconst sign1FromGroupTxn: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const assetIndex = 100;\n\n  const txn1 = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: address,\n    assetIndex,\n    amount: 0,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const txn2 = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: testAccounts[0].addr,\n    to: address,\n    assetIndex,\n    amount: 1000000,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const txnsToSign = [\n    { txn: txn1, shouldSign: true },\n    { txn: txn2, shouldSign: false },\n  ];\n\n  algosdk.computeGroupID(txnsToSign.map(toSign => toSign.txn));\n\n  return txnsToSign;\n};\n\nconst sign2FromGroupTxn: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const assetIndex = 100;\n\n  const txn1 = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: address,\n    assetIndex,\n    amount: 0,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const txn2 = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: testAccounts[0].addr,\n    to: address,\n    assetIndex,\n    amount: 1000000,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const txn3 = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    amount: 500000,\n    note: new Uint8Array(Buffer.from(\"this is a payment txn\")),\n    suggestedParams,\n  });\n\n  const txnsToSign = [\n    { txn: txn1, shouldSign: true },\n    { txn: txn2, shouldSign: false },\n    { txn: txn3, shouldSign: true },\n  ];\n\n  algosdk.computeGroupID(txnsToSign.map(toSign => toSign.txn));\n\n  return txnsToSign;\n};\n\nconst signGroupWithPayOptinTransfer: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const assetIndex = 100;\n\n  const txn1 = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    amount: 500000,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const txn2 = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: address,\n    assetIndex,\n    amount: 0,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const txn3 = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    assetIndex,\n    amount: 1000000,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const txnsToSign = [\n    { txn: txn1, shouldSign: true },\n    { txn: txn2, shouldSign: true },\n    { txn: txn3, shouldSign: true },\n  ];\n\n  algosdk.computeGroupID(txnsToSign.map(toSign => toSign.txn));\n\n  return txnsToSign;\n};\n\nconst signGroupWithPayRekey: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const txn1 = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    amount: 500000,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const txn2 = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    amount: 500000,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    rekeyTo: testAccounts[2].addr,\n    suggestedParams,\n  });\n\n  const txnsToSign = [\n    { txn: txn1, shouldSign: true },\n    { txn: txn2, shouldSign: true },\n  ];\n\n  algosdk.computeGroupID(txnsToSign.map(toSign => toSign.txn));\n\n  return txnsToSign;\n};\n\nconst signGroupOf7: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const assetIndex = 100;\n\n  const optIn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: address,\n    amount: 0,\n    assetIndex,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const assetXfer = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    assetIndex,\n    amount: 50,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const assetClose = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    assetIndex,\n    amount: 50,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    closeRemainderTo: testAccounts[1].addr,\n    suggestedParams,\n  });\n\n  const payment = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    amount: 500000,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const accountClose = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    amount: 0,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    closeRemainderTo: testAccounts[1].addr,\n    suggestedParams,\n  });\n\n  const accountRekey = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    amount: 1000,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    rekeyTo: testAccounts[2].addr,\n    suggestedParams,\n  });\n\n  const accountRekeyAndClose = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    amount: 50000,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    closeRemainderTo: testAccounts[1].addr,\n    rekeyTo: testAccounts[2].addr,\n    suggestedParams,\n  });\n\n  const txnsToSign = [\n    { txn: optIn, shouldSign: true },\n    { txn: assetXfer, shouldSign: true },\n    { txn: assetClose, shouldSign: true },\n    { txn: payment, shouldSign: true },\n    { txn: accountClose, shouldSign: true },\n    { txn: accountRekey, shouldSign: true },\n    { txn: accountRekeyAndClose, shouldSign: true },\n  ];\n\n  algosdk.computeGroupID(txnsToSign.map(toSign => toSign.txn));\n\n  return txnsToSign;\n};\n\nconst signTxnWithAssetClose: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const assetIndex = 100;\n\n  const txn1 = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    assetIndex,\n    amount: 50,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const txn2 = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    assetIndex,\n    amount: 50,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    closeRemainderTo: testAccounts[1].addr,\n    suggestedParams,\n  });\n\n  const txnsToSign = [\n    { txn: txn1, shouldSign: true },\n    { txn: txn2, shouldSign: true },\n  ];\n\n  algosdk.computeGroupID(txnsToSign.map(toSign => toSign.txn));\n\n  return txnsToSign;\n};\n\nconst signTxnWithRekey: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const assetIndex = 100;\n\n  const txn1 = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    assetIndex,\n    amount: 50,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const txn2 = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    assetIndex,\n    amount: 50,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    rekeyTo: testAccounts[2].addr,\n    suggestedParams,\n  });\n\n  const txnsToSign = [\n    { txn: txn1, shouldSign: true },\n    { txn: txn2, shouldSign: true },\n  ];\n\n  algosdk.computeGroupID(txnsToSign.map(toSign => toSign.txn));\n\n  return txnsToSign;\n};\n\nconst signTxnWithRekeyAndAssetClose: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const assetIndex = 100;\n\n  const txn1 = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    assetIndex,\n    amount: 10,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    suggestedParams,\n  });\n\n  const txn2 = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    assetIndex,\n    amount: 20,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    closeRemainderTo: testAccounts[1].addr,\n    suggestedParams,\n  });\n\n  const txn3 = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    assetIndex,\n    amount: 30,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    rekeyTo: testAccounts[2].addr,\n    suggestedParams,\n  });\n\n  const txn4 = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n    from: address,\n    to: testAccounts[0].addr,\n    assetIndex,\n    amount: 40,\n    note: new Uint8Array(Buffer.from(\"example note value\")),\n    closeRemainderTo: testAccounts[1].addr,\n    rekeyTo: testAccounts[2].addr,\n    suggestedParams,\n  });\n\n  const txnsToSign = [\n    { txn: txn1, shouldSign: true },\n    { txn: txn2, shouldSign: true },\n    { txn: txn3, shouldSign: true },\n    { txn: txn4, shouldSign: true },\n  ];\n\n  algosdk.computeGroupID(txnsToSign.map(toSign => toSign.txn));\n\n  return txnsToSign;\n};\n\nconst fullTxnGroup: Scenario = async (\n  address: string,\n): Promise<Array<{ txn: algosdk.Transaction; shouldSign: boolean }>> => {\n  const suggestedParams = await apiGetTxnParams();\n\n  const txnsToSign: Array<{ txn: algosdk.Transaction; shouldSign: boolean }> = [];\n\n  for (let i = 0; i < 8; i++) {\n    const assetIndex = 100 + i;\n\n    const optIn = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n      from: address,\n      to: address,\n      amount: 0,\n      assetIndex,\n      note: new Uint8Array(Buffer.from(\"example note value\")),\n      suggestedParams,\n    });\n\n    const closeOut = algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({\n      from: address,\n      to: address,\n      amount: 0,\n      assetIndex,\n      note: new Uint8Array(Buffer.from(\"example note value\")),\n      closeRemainderTo: testAccounts[1].addr,\n      suggestedParams,\n    });\n\n    txnsToSign.push({ txn: optIn, shouldSign: true });\n    txnsToSign.push({ txn: closeOut, shouldSign: true });\n  }\n\n  algosdk.computeGroupID(txnsToSign.map(toSign => toSign.txn));\n\n  return txnsToSign;\n};\n\nexport const scenarios: Array<{ name: string; scenario: Scenario }> = [\n  {\n    name: \"1. Sign single pay txn\",\n    scenario: singlePayTxn,\n  },\n  {\n    name: \"2. Sign single pay txn with close\",\n    scenario: singlePayTxnWithClose,\n  },\n  {\n    name: \"3. Sign single pay txn with rekey\",\n    scenario: singlePayTxnWithRekey,\n  },\n  {\n    name: \"4. Sign single pay txn with rekey and close\",\n    scenario: singlePayTxnWithRekeyAndClose,\n  },\n  {\n    name: \"5. Sign single asset opt-in txn\",\n    scenario: singleAssetOptInTxn,\n  },\n  {\n    name: \"6. Sign single asset transfer txn\",\n    scenario: singleAssetTransferTxn,\n  },\n  {\n    name: \"7. Sign single asset transfer txn with close\",\n    scenario: singleAssetTransferTxnWithClose,\n  },\n  {\n    name: \"8. Sign single app opt-in txn\",\n    scenario: singleAppOptIn,\n  },\n  {\n    name: \"9. Sign single app call txn\",\n    scenario: singleAppCall,\n  },\n  {\n    name: \"10. Sign single app call txn with rekey\",\n    scenario: singleAppCallWithRekey,\n  },\n  {\n    name: \"11. Sign single app close out txn\",\n    scenario: singleAppCloseOut,\n  },\n  {\n    name: \"12. Sign 1 of 2 txns from a group\",\n    scenario: sign1FromGroupTxn,\n  },\n  {\n    name: \"13. Sign 2 of 3 txns from a group\",\n    scenario: sign2FromGroupTxn,\n  },\n  {\n    name: \"14. Sign txn group with pay, asset opt-in, and asset transfer\",\n    scenario: signGroupWithPayOptinTransfer,\n  },\n  {\n    name: \"15. Sign txn group with pay and rekey\",\n    scenario: signGroupWithPayRekey,\n  },\n  {\n    name: \"16. Sign txn group with asset close\",\n    scenario: signTxnWithAssetClose,\n  },\n  {\n    name: \"17. Sign txn group with rekey\",\n    scenario: signTxnWithRekey,\n  },\n  {\n    name: \"18. Sign txn group with rekey and asset close\",\n    scenario: signTxnWithRekeyAndAssetClose,\n  },\n  {\n    name: \"19. Sign group of 7\",\n    scenario: signGroupOf7,\n  },\n  {\n    name: \"20. Full txn group\",\n    scenario: fullTxnGroup,\n  },\n];\n","import algosdk from \"algosdk\";\nimport { IAssetData } from \"./types\";\n\nconst client = new algosdk.Algodv2(\"\", \"https://testnet.algoexplorerapi.io\", \"\");\n\nexport async function apiGetAccountAssets(address: string): Promise<IAssetData[]> {\n  const accountInfo = await client\n    .accountInformation(address)\n    .setIntDecoding(algosdk.IntDecoding.BIGINT)\n    .do();\n\n  const algoBalance = accountInfo.amount as bigint;\n  const assetsFromRes: Array<{\n    \"asset-id\": bigint;\n    amount: bigint;\n    creator: string;\n    frozen: boolean;\n  }> = accountInfo.assets;\n\n  const assets: IAssetData[] = assetsFromRes.map(({ \"asset-id\": id, amount, creator, frozen }) => ({\n    id: Number(id),\n    amount,\n    creator,\n    frozen,\n    decimals: 0,\n  }));\n\n  assets.sort((a, b) => a.id - b.id);\n\n  await Promise.all(\n    assets.map(async asset => {\n      const { params } = await client.getAssetByID(asset.id).do();\n      asset.name = params.name;\n      asset.unitName = params[\"unit-name\"];\n      asset.url = params.url;\n      asset.decimals = params.decimals;\n    }),\n  );\n\n  assets.unshift({\n    id: 0,\n    amount: algoBalance,\n    creator: \"\",\n    frozen: false,\n    decimals: 6,\n    name: \"Algo\",\n    unitName: \"Algo\",\n  });\n\n  return assets;\n}\n\nexport async function apiGetTxnParams(): Promise<algosdk.SuggestedParams> {\n  const params = await client.getTransactionParams().do();\n  return params;\n}\n\nexport async function apiSubmitTransactions(stxns: Uint8Array[]): Promise<number> {\n  const { txId } = await client.sendRawTransaction(stxns).do();\n  return await waitForTransaction(txId);\n}\n\nasync function waitForTransaction(txId: string): Promise<number> {\n  let lastStatus = await client.status().do();\n  let lastRound = lastStatus[\"last-round\"];\n  while (true) {\n    const status = await client.pendingTransactionInformation(txId).do();\n    if (status[\"pool-error\"]) {\n      throw new Error(`Transaction Pool Error: ${status[\"pool-error\"]}`);\n    }\n    if (status[\"confirmed-round\"]) {\n      return status[\"confirmed-round\"];\n    }\n    lastStatus = await client.statusAfterBlock(lastRound + 1).do();\n    lastRound = lastStatus[\"last-round\"];\n  }\n}\n"],"sourceRoot":""}